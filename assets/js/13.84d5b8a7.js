(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{380:function(t,v,_){"use strict";_.r(v);var s=_(45),o=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"在i-o方面要注意什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#在i-o方面要注意什么"}},[t._v("#")]),t._v(" 在I/O方面要注意什么")]),t._v(" "),_("p",[t._v("I/O(input / ouput) 是文件的读取和输出，可以看做是数据的流转。")]),t._v(" "),_("p",[t._v("I/O有5种模型，我们以读文件为例来进行介绍。读文件在系统层面有两个阶段")]),t._v(" "),_("ol",[_("li",[t._v("读取文件，将文件放入操作系统内核缓冲区")]),t._v(" "),_("li",[t._v("从内核缓冲区中将文件拷贝到程序地址空间")])]),t._v(" "),_("p",[_("strong",[t._v("阻塞I/O")])]),t._v(" "),_("p",[t._v("​\t阻塞I/O会等待读文件的两个阶段都完成后才能进行其它任务处理")]),t._v(" "),_("p",[_("strong",[t._v("非阻塞I/O")])]),t._v(" "),_("p",[t._v("​\t在读取文件开始后，系统会返回正在读取中的状态。这时你可以去处理其它任务，但读取文件的结果需要你主\t动去询问（比如用轮询去检测）")]),t._v(" "),_("p",[_("strong",[t._v("多路复用I/O")])]),t._v(" "),_("p",[t._v("​\t这时了解决轮询调度的问题，它会重新开辟一个线程去处理I/O，当I/O完成后，会通知你。多路复用I/O又有3种\t模式 "),_("strong",[t._v("select，poll，epoll")]),t._v("，前两者只会告诉你I/O完成，而 epoll 会告诉你具体完成的I/O")]),t._v(" "),_("p",[_("strong",[t._v("信号驱动I/O")])]),t._v(" "),_("p",[_("strong",[t._v("异步I/O")])]),t._v(" "),_("h4",{attrs:{id:"接下来从两个方面来介绍如何优化i-o"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#接下来从两个方面来介绍如何优化i-o"}},[t._v("#")]),t._v(" 接下来从两个方面来介绍如何优化I/O")]),t._v(" "),_("ul",[_("li",[t._v("本地磁盘I/O")]),t._v(" "),_("li",[t._v("远程网络I/O")])])])}),[],!1,null,null,null);v.default=o.exports}}]);